<?php

namespace Tests\Feature;

use App\Models\Plan;
use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Stripe\Stripe;
use Tests\traits\InteractsWithStripe;
use Tests\TestCase;

class SubscriptionTest extends TestCase
{

    use RefreshDatabase, InteractsWithStripe;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->stripe = new \Stripe\StripeClient(config('services.stripe.secret'));
    }

    /**
     * A basic feature test example.
     *
     * @return void
     */
    public function testSubscribesAUser()
    {

        $user = User::factory()->create([
            'subscription_active' => false
        ]);

        $user->subscription()->createCustomer();

        $result = $user->subscription()->create($this->getPaymentMethod(), $this->getPlan());

        if($result->id){
            $user->activate();
        }

        $this->assertTrue($user->fresh()->isSubscribed());

        try{
            $user->subscription()->retrieve($result->id);
        }catch (\Exception $e){
            $this->fail($e->getMessage());
        }
    }
}
